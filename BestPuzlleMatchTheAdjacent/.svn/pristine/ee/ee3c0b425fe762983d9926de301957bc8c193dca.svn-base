

#ifndef SCORELAYER_H_
#define SCORELAYER_H_

#include "cocos2d.h"
#include "ScoreData.h"
#include "cocos2d.h"
#include "cocos-ext.h"

using namespace cocos2d;

class ScoreLayer: public cocos2d::CCLayer
,public cocos2d::extension::CCBSelectorResolver
,public cocos2d::extension::CCBMemberVariableAssigner
,public cocos2d::extension::CCNodeLoaderListener


 {
public:
	ScoreLayer();
	virtual ~ScoreLayer();
     CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(ScoreLayer, create);
     //CCB methods...
     virtual cocos2d::SEL_MenuHandler onResolveCCBCCMenuItemSelector(cocos2d::CCObject * pTarget, const char * pSelectorName);
     virtual cocos2d::extension::SEL_CCControlHandler onResolveCCBCCControlSelector(cocos2d::CCObject * pTarget, const char * pSelectorName);
     virtual bool onAssignCCBMemberVariable(cocos2d::CCObject * pTarget, const char * pMemberVariableName, cocos2d::CCNode * pNode);
     virtual bool onAssignCCBCustomProperty(CCObject* pTarget, const char* pMemberVariableName, cocos2d::extension::CCBValue* pCCBValue);
     virtual void onNodeLoaded(cocos2d::CCNode * pNode, cocos2d::extension::CCNodeLoader * pNodeLoader);
     virtual cocos2d::SEL_CallFuncN onResolveCCBCCCallFuncSelector(CCObject * pTarget, const char* pSelectorName);
     cocos2d::extension::CCBAnimationManager *mAnimationManager;
     
     virtual void ccTouchesBegan(CCSet *pTouches, CCEvent *pEvent);
     virtual void ccTouchesMoved(CCSet *pTouches, CCEvent *pEvent);
     virtual void ccTouchesEnded(CCSet *pTouches, CCEvent *pEvent);
     virtual void  ccTouchesCancelled(CCSet *pTouches, CCEvent *pEvent);


private:
	void initBackground();
	bool init();
	void keyBackClicked();
	void initBackButton();
	void backButtonPressed();
	CCLabelTTF *highScore;
	void initHighScore();
};

#endif /* SCORELAYER_H_ */
